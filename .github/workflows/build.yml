name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    name: ${{ matrix.platform }} (${{ matrix.python-version }})
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.13"]
        platform: [ubuntu-latest, macos-latest]
    defaults:
      run:
        shell: "bash -l {0}"

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      # - name: setup micromamba
      #   id: setup-micromamba
      #   uses: mamba-org/setup-micromamba@v2.0.1
      #   with:
      #     environment-name: test
      #     cache-environment: true
      #     post-cleanup: 'all'
      #     create-args: >-
      #       python=${{ matrix.python-version }}
      #       pytest pytest-cov pytest-benchmark scikit-image


      - name: Get conda - ${{ matrix.python-version }}
        id: get-conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          miniforge-version: latest
          activate-environment: test
          use-mamba: true

      - name: Dependencies
        id: install-dependencies
        run: |
          mamba install -y pytest pytest-cov pytest-benchmark scikit-image

      - name: Install OpenCL (pocl)
        id: install-pocl
        if: matrix.platform != 'windows-latest'
        run: |
          mamba install -y pocl

      - name: Install OpenCL (oclgrind)
        id: install-oclgrind
        if: matrix.platform == 'windows-latest'
        run: |
          mamba install -y oclgrind

      - name: Build
        id: build
        run: |
          pip install . -v --config-settings=cmake.define.CMAKE_PREFIX_PATH=$CONDA_PREFIX

      - name: Test
        id: test
        if: matrix.platform == 'ubuntu-latest'
        run: |
          mkdir coverage && cd coverage
          pytest --cov=pyclesperanto ../tests/ --cov-report=xml

      - name: Coverage
        id: coverage
        if: matrix.platform == 'ubuntu-latest' && github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
        uses: codecov/codecov-action@v5.0.7
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ./coverage/coverage.xml
          fail_ci_if_error: true # optional (default = false)
